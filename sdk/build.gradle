buildscript {
  dependencies {
    classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion")
  }
}

apply(plugin: "com.android.library")
apply(plugin: "kotlin-android")
apply(plugin: "kotlin-kapt")
apply(plugin: "kotlin-android-extensions")

dependencies {
  implementation(fileTree(dir: 'libs', include: ['*.jar']))

  implementation("org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion")

  // http request, api calls
  implementation("com.squareup.retrofit2:retrofit:$retrofitVersion")
  implementation("com.squareup.retrofit2:converter-gson:$retrofitVersion")
  implementation("com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion")
  implementation("com.squareup.okhttp3:logging-interceptor:$okHttpVersion")
  implementation("com.squareup.okhttp3:okhttp:$okHttpVersion")
  implementation("com.google.code.gson:gson:$gsonVersion")

  // RX
  implementation("io.reactivex.rxjava2:rxandroid:$rxAndroidVersion")
  implementation("io.reactivex.rxjava2:rxjava:$rxJavaVersion")

  // room persistance
  implementation("android.arch.persistence.room:runtime:$roomVersion")
  kapt("android.arch.persistence.room:compiler:$roomVersion")
  testImplementation("android.arch.persistence.room:testing:$roomVersion")

  androidTestImplementation("com.android.support.test.espresso:espresso-core:$espressoVersion") {
    exclude(group: "com.android.support", module: "support-annotations")
  }
  implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion")
  implementation("com.android.support:appcompat-v7:$supportVersion")
  testImplementation("junit:junit:$junitVersion")
  testImplementation("com.nhaarman:mockito-kotlin:$mockitoKotlinVersion")
}

uploadArchives("com.kiwi.mobile", "sygic-travel", sygicTravelVersion, false)
